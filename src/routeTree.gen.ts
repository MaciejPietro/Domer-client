/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SettingsImport } from './routes/settings'
import { Route as ProjectsImport } from './routes/projects'
import { Route as ProjectImport } from './routes/project'
import { Route as CreatorImport } from './routes/creator'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as AuthThankyouImport } from './routes/auth/thankyou'
import { Route as AuthResetpasswordsentImport } from './routes/auth/resetpasswordsent'
import { Route as AuthResetpasswordImport } from './routes/auth/resetpassword'
import { Route as AuthRemindpasswordImport } from './routes/auth/remindpassword'
import { Route as AuthRegisterImport } from './routes/auth/register'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as AuthEmailconfirmImport } from './routes/auth/emailconfirm'

// Create/Update Routes

const SettingsRoute = SettingsImport.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsRoute = ProjectsImport.update({
  path: '/projects',
  getParentRoute: () => rootRoute,
} as any)

const ProjectRoute = ProjectImport.update({
  path: '/project',
  getParentRoute: () => rootRoute,
} as any)

const CreatorRoute = CreatorImport.update({
  path: '/creator',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthThankyouRoute = AuthThankyouImport.update({
  path: '/auth/thankyou',
  getParentRoute: () => rootRoute,
} as any)

const AuthResetpasswordsentRoute = AuthResetpasswordsentImport.update({
  path: '/auth/resetpasswordsent',
  getParentRoute: () => rootRoute,
} as any)

const AuthResetpasswordRoute = AuthResetpasswordImport.update({
  path: '/auth/resetpassword',
  getParentRoute: () => rootRoute,
} as any)

const AuthRemindpasswordRoute = AuthRemindpasswordImport.update({
  path: '/auth/remindpassword',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthEmailconfirmRoute = AuthEmailconfirmImport.update({
  path: '/auth/emailconfirm',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/creator': {
      preLoaderRoute: typeof CreatorImport
      parentRoute: typeof rootRoute
    }
    '/project': {
      preLoaderRoute: typeof ProjectImport
      parentRoute: typeof rootRoute
    }
    '/projects': {
      preLoaderRoute: typeof ProjectsImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/auth/emailconfirm': {
      preLoaderRoute: typeof AuthEmailconfirmImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/auth/remindpassword': {
      preLoaderRoute: typeof AuthRemindpasswordImport
      parentRoute: typeof rootRoute
    }
    '/auth/resetpassword': {
      preLoaderRoute: typeof AuthResetpasswordImport
      parentRoute: typeof rootRoute
    }
    '/auth/resetpasswordsent': {
      preLoaderRoute: typeof AuthResetpasswordsentImport
      parentRoute: typeof rootRoute
    }
    '/auth/thankyou': {
      preLoaderRoute: typeof AuthThankyouImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AboutRoute,
  CreatorRoute,
  ProjectRoute,
  ProjectsRoute,
  SettingsRoute,
  AuthEmailconfirmRoute,
  AuthLoginRoute,
  AuthRegisterRoute,
  AuthRemindpasswordRoute,
  AuthResetpasswordRoute,
  AuthResetpasswordsentRoute,
  AuthThankyouRoute,
])

/* prettier-ignore-end */
