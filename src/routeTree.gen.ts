/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const SettingsLazyImport = createFileRoute('/settings')()
const RegisterLazyImport = createFileRoute('/register')()
const ProjectLazyImport = createFileRoute('/project')()
const ContactsLazyImport = createFileRoute('/contacts')()

// Create/Update Routes

const SettingsLazyRoute = SettingsLazyImport.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/settings.lazy').then((d) => d.Route))

const RegisterLazyRoute = RegisterLazyImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/register.lazy').then((d) => d.Route))

const ProjectLazyRoute = ProjectLazyImport.update({
  path: '/project',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/project.lazy').then((d) => d.Route))

const ContactsLazyRoute = ContactsLazyImport.update({
  path: '/contacts',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/contacts.lazy').then((d) => d.Route))

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/contacts': {
      preLoaderRoute: typeof ContactsLazyImport
      parentRoute: typeof rootRoute
    }
    '/project': {
      preLoaderRoute: typeof ProjectLazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      preLoaderRoute: typeof RegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      preLoaderRoute: typeof SettingsLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  LoginRoute,
  ContactsLazyRoute,
  ProjectLazyRoute,
  RegisterLazyRoute,
  SettingsLazyRoute,
])

/* prettier-ignore-end */
